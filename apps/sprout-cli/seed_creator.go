package main

import (
	"fmt"
	"os"
	"path/filepath"
)

func createSeed(name string) error {
	if name == "" {
		return fmt.Errorf("seed name cannot be empty")
	}

	projectDir := name

	if _, err := os.Stat(projectDir); err == nil {
		return fmt.Errorf("directory '%s' already exists", projectDir)
	}

	if err := os.MkdirAll(filepath.Join(projectDir, "docs"), 0755); err != nil {
		return fmt.Errorf("failed to create docs directory: %w", err)
	}

	readmeContent := fmt.Sprintf(`# %s

Welcome to your new project! This seed provides a foundation for your development.

## Getting Started

This project follows the Sprouted ecosystem patterns:

- **🌱 Seed**: This individual project with its own docs and structure
- **🌾 Garden**: When you have multiple related projects, consider creating a Garden
- **🚜 Farm**: For organization-wide coordination across multiple Gardens

## Documentation Structure

- ` + "`docs/README.md`" + ` - This file
- Add your project-specific documentation as needed

## Next Steps

1. Initialize your project (git, dependencies, etc.)
2. Add your code and documentation
3. Consider the Weather System for context preservation: https://sprouted.dev

---

*Generated by ` + "`sprout seed %s`" + ` from the Sprouted ecosystem*
`, name, name)

	readmePath := filepath.Join(projectDir, "docs", "README.md")
	if err := os.WriteFile(readmePath, []byte(readmeContent), 0644); err != nil {
		return fmt.Errorf("failed to create README.md: %w", err)
	}

	fmt.Printf("🌱 Created seed: %s\n", name)
	fmt.Printf("📁 Project directory: %s/\n", projectDir)
	fmt.Printf("📖 Documentation: %s/docs/README.md\n", projectDir)
	fmt.Println()
	fmt.Println("Next steps:")
	fmt.Printf("  cd %s\n", projectDir)
	fmt.Println("  # Initialize your project (git init, etc.)")
	fmt.Println("  # Start building!")

	return nil
}